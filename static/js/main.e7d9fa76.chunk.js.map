{"version":3,"sources":["Weathercard.js","FetchApiData.js","App.js","index.js"],"names":["Weathercard","_ref","temp","humidity","pressure","weathermood","name","speed","country","sunset","weatherState","setWeatherState","React","useState","useEffect","date","Date","timeStr","concat","getHours","getMinutes","_jsx","_Fragment","children","_jsxs","className","toLocaleString","FetchApiData","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","async","url","res","fetch","data","json","main","weather","wind","sys","error","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7d9fa76.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Weathercard = ({\n  temp,\n  humidity,\n  pressure,\n  weathermood,\n  name,\n  speed,\n  country,\n  sunset,\n}) => {\n  const [weatherState, setWeatherState] = React.useState(\"\");\n\n  useEffect(() => {\n    if (weathermood) {\n      switch (weathermood) {\n        case \"Clouds\":\n          setWeatherState(\"wi-day-cloudy\");\n          break;\n        case \"Haze\":\n          setWeatherState(\"wi-fog\");\n          break;\n        case \"Clear\":\n          setWeatherState(\"wi-day-sunny\");\n          break;\n        case \"Mist\":\n          setWeatherState(\"wi-dust\");\n          break;\n\n        default:\n          setWeatherState(\"wi-day-sunny\");\n          break;\n      }\n    }\n  }, [weathermood]);\n\n  // converting the seconds into time\n  let sec = sunset;\n  let date = new Date(sec * 1000);\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\n  return (\n    <>\n      <article className=\"widget\">\n        <div className=\"weatherIcon\">\n          <i className={`wi ${weatherState}`}></i>\n        </div>\n\n        <div className=\"weatherInfo\">\n          <div className=\"temperature\">\n            <span>{temp}&deg;</span>\n          </div>\n\n          <div className=\"description\">\n            <div className=\"weatherCondition\">{weathermood}</div>\n            <div className=\"place\">\n              {name}, {country}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"date\"> {new Date().toLocaleString()} </div>\n\n        {/* our 4column section  */}\n        <div className=\"extra-temp\">\n          <div className=\"temp-info-minmax\">\n            <div className=\"two-sided-section\">\n              <p>\n                <i className={\"wi wi-sunset\"}></i>\n              </p>\n              <p className=\"extra-info-leftside\">\n                {timeStr} PM <br />\n                Sunset\n              </p>\n            </div>\n\n            <div className=\"two-sided-section\">\n              <p>\n                <i className={\"wi wi-humidity\"}></i>\n              </p>\n              <p className=\"extra-info-leftside\">\n                {humidity} <br />\n                Humidity\n              </p>\n            </div>\n          </div>\n\n          <div className=\"weather-extra-info\">\n            <div className=\"two-sided-section\">\n              <p>\n                <i className={\"wi wi-rain\"}></i>\n              </p>\n              <p className=\"extra-info-leftside\">\n                {pressure} <br />\n                Pressure\n              </p>\n            </div>\n\n            <div className=\"two-sided-section\">\n              <p>\n                <i className={\"wi wi-strong-wind\"}></i>\n              </p>\n              <p className=\"extra-info-leftside\">\n                {speed} <br />\n                Speed\n              </p>\n            </div>\n          </div>\n        </div>\n      </article>\n    </>\n  );\n};\n\nexport default Weathercard;","import React, { useState, useEffect } from \"react\";\nimport Weathercard from \"./Weathercard\";\nimport \"./Style.css\";\n\nconst FetchApiData = () => {\n  const [searchValue, setSearchValue] = useState(\"pune\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&appid=7486fc54bcb0d2fc2f13748fa2791050&units=metric`;\n\n\n      let res = await fetch(url);\n      let data = await res.json();\n\n      const { temp, humidity, pressure } = data.main;\n      const { main: weathermood } = data.weather[0];\n      const { name } = data;\n      const { speed } = data.wind;\n      const { country, sunset } = data.sys;\n\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset,\n      };\n\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input\n            type=\"search\"\n            placeholder=\"search...\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n          />\n\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={getWeatherInfo}>\n            Search\n          </button>\n        </div>\n      </div>\n\n      {/* our card  */}\n      <Weathercard {...tempInfo} />\n    </>\n  );\n};\n\nexport default FetchApiData;","import React from 'react';\nimport FetchApiData from './FetchApiData';\n\nfunction App() {\n  return (\n    <>\n    <FetchApiData />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}